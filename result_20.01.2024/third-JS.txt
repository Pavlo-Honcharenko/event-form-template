<script>
	document.addEventListener('DOMContentLoaded', function() {

		// Добавление класса "info-div" для всплывающих подсказок:

		// Get all elements with id="ec_field_label"
		var elements = document.querySelectorAll('[id="ec_field_label"]');

		// Iterate through each element
		elements.forEach(function(element) {
			// Find the preceding div
			var precedingDiv = element.previousElementSibling;

			// Check if the preceding div contains a <label>
			if (precedingDiv && precedingDiv.querySelector('label')) {
				// Add the class "info-div" to the preceding div
				precedingDiv.classList.add('info-div');
			}
		});


		// Get all elements with class 'info-div'
		var infoDivs = document.querySelectorAll('.info-div');

		// Iterate over each 'info-div'
		infoDivs.forEach(function(infoDiv) {
			// Attach click event listener to the current 'info-div'
			infoDiv.addEventListener('click', function() {
				// Get the next sibling element with id 'ec_field_label'
				var labelElement = getNextSiblingById(infoDiv, 'ec_field_label');

				// Toggle the class '.show-label' on the label element
				labelElement.classList.toggle('show-label');
			});
		});

		// Function to get the next sibling element with a specific id
		function getNextSiblingById(element, id) {
			var sibling = element.nextElementSibling;
			while (sibling) {
				if (sibling.id === id) {
					return sibling;
				}
				sibling = sibling.nextElementSibling;
			}
			return null;
		}



		// показ подсказки по клику:

		document.addEventListener('click', function(event) {
			// Check if the clicked element has the "show-label" class
			if (event.target.classList.contains('show-label')) {
				// Get the width of the element
				const elementWidth = event.target.offsetWidth;

				// Set the threshold for the right part width (40 pixels)
				const rightPartWidth = 40;

				// Check if the click was in the right part (within 40 pixels from the right edge)
				if (event.clientX > event.target.getBoundingClientRect().left + elementWidth - rightPartWidth) {
					// Remove the "show-label" class
					event.target.classList.remove('show-label');
				}
			}
		});








		// Фиксация элементов сверху на странице:

		// Get the <thead> and <tbody> elements
		const thead = document.querySelector('#registrations_table thead');
		const tbody = document.querySelector('#registrations_table_tbody');

		// Get the initial offset, width, and th widths
		const initialOffset = thead.getBoundingClientRect().top;
		let initialOffsetCorrect = initialOffset - 69 - 56;
		if (initialOffsetCorrect < 67) {
			initialOffsetCorrect = 67;
		}
		const initialWidth = thead.offsetWidth;
		const thElements = Array.from(thead.querySelectorAll('th'));

		// Fix the position of <thead> immediately
		thead.style.position = 'fixed';
		thead.style.top = `${initialOffsetCorrect}px`; // Set top position to the initial offset
		thead.style.width = `${initialWidth}px`;




		// Find the first element with the class "tab"
		const tabElement = document.querySelector('.tab');

		// Check if the element is found before proceeding
		if (tabElement) {
			// Get the width of the element
			const tabWidth = tabElement.offsetWidth;

			// Get the position of the element on the screen
			const tabPosition = tabElement.getBoundingClientRect();

			let tabPositionCorrect = tabPosition.top
			if (tabPositionCorrect < 10) {
				tabPositionCorrect = 10;
			}

			// Add width and position properties to the element
			tabElement.style.width = `${tabWidth}px`;
			tabElement.style.position = 'fixed';
			tabElement.style.top = `${tabPositionCorrect}px`;
			tabElement.style.left = `${tabPosition.left}px`;



			// если элементы не были расположены изначально сверху, то при скроле исправим это: 

			window.addEventListener('scroll', function() {
				// Get the vertical scroll position of the page
				var scrollPosition = window.scrollY || window.pageYOffset;

				// Check if the scroll position is greater than or equal to 67 pixels
				if (scrollPosition >= 60) {
					tabElement.style.top = `10px`;
					thead.style.top = `67px`;


					// Check if the element with id "registrations_table" exists
					var registrationsTable = document.getElementById('registrations_table');

					if (registrationsTable) {
						// If the element exists, set its margin-top to 32px
						registrationsTable.style.marginTop = '32px';
					}
				}
			});



			// Изменение положения фиксированного блока если сообщение закрывается:

			document.getElementById('ec_status_div').addEventListener('click', function(event) {
				// Check if the click occurred on an anchor element
				if (event.target.tagName === 'A') {
					// поднимаем фиксированные части и таблицу к верху окна
					tabElement.style.top = `10px`;
					thead.style.top = `67px`;
				}
			});




			// открывание окна в зависимости от положения относительно экрана:

			document.addEventListener('click', function(event) {
				// Check if the clicked element has the class "multi_options_btn" and is a child of "#registrations_table_tbody"
				if (event.target.classList.contains('multi_options_btn') && event.target.closest('#registrations_table_tbody')) {
					// Get the next sibling element with class "multi_options_button-content"
					var contentElement = event.target.nextElementSibling;

					// Check if the next sibling exists and has the desired class
					if (contentElement && contentElement.classList.contains('multi_options_button-content')) {
						// Get the coordinates of the clicked element
						var elementRect = event.target.getBoundingClientRect();
						var elementY = elementRect.top + window.scrollY;

						// Get the height of the window
						var windowHeight = window.innerHeight;

						// Calculate the distance to the top and bottom edges
						var distanceToTop = elementY;
						/* console.log("distanceToTop "+ distanceToTop); */
						var distanceToBottom = windowHeight - elementY;
						/* console.log("distanceToBottom "+ distanceToBottom); */

						// Apply styles based on the proximity to the top or bottom
						if (distanceToTop < distanceToBottom) {
							contentElement.style.top = '100%';
							contentElement.style.bottom = ''; // Reset bottom style
						} else {
							contentElement.style.bottom = '100%';
							contentElement.style.top = ''; // Reset top style
						}
					}
				}
			});

		}

	});
</script>